// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/devexps/go-bootstrap/gen/api/go/conf/v1"
	"github.com/devexps/go-micro/v2"
	"github.com/devexps/go-micro/v2/log"
	"github.com/devexps/go-micro/v2/registry"
	"github.com/devexps/go-monolithic-demo/app/admin/service/internal/data"
	"github.com/devexps/go-monolithic-demo/app/admin/service/internal/server"
	"github.com/devexps/go-monolithic-demo/app/admin/service/internal/service"
)

// Injectors from wire.go:

// initApp init GoMicro application.
func initApp(logger log.Logger, registrar registry.Registrar, bootstrap *v1.Bootstrap) (*micro.App, func(), error) {
	authenticator := data.NewAuthenticator(bootstrap)
	authorizer := data.NewAuthorizer()
	authenticationService := service.NewAuthenticationService(logger)
	dataData, cleanup, err := data.NewData(logger)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData, logger)
	userService := service.NewUserService(logger, userRepo)
	httpServer := server.NewHTTPServer(bootstrap, logger, authenticator, authorizer, authenticationService, userService)
	app := newApp(logger, registrar, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
